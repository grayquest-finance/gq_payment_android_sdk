plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace "com.grayquest.android.payment.sdk"
    compileSdk 34

    defaultConfig {
        minSdk 23
        targetSdk 34
        versionName "1.9.14"

        multiDexEnabled = true;

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'

    api 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    api 'com.squareup.okhttp3:okhttp:4.9.2'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.google.code.gson:gson:2.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'

    api 'com.razorpay:checkout:1.6.41'

    api 'in.easebuzz:android-v1:1.0.0'// easebuz SDK

    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'com.cashfree.pg:api:1.1.0'
    api 'com.cashfree.pg:api:2.1.27'
    implementation 'androidx.activity:activity:1.9.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.grayquest.android'
                artifactId = 'payment-sdk'
                version = '1.0.31'

                // Explicitly depend on the bundle task
                def aarTask = tasks.named("bundleReleaseAar")
                artifact(aarTask.map { it.archiveFile.get().asFile }) {
                    builtBy aarTask
                }

                pom {
                    name = 'Payment SDK'
                    description = 'GrayQuest Payment SDK for Android'
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')

                        // Gson
                        def gsonDep = dependenciesNode.appendNode('dependency')
                        gsonDep.appendNode('groupId', 'com.google.code.gson')
                        gsonDep.appendNode('artifactId', 'gson')
                        gsonDep.appendNode('version', '2.10.1')
                        gsonDep.appendNode('scope', 'compile')

                        // okhttp3 logging
                        def okhttp3logging = dependenciesNode.appendNode('dependency')
                        okhttp3logging.appendNode('groupId', 'com.squareup.okhttp3')
                        okhttp3logging.appendNode('artifactId', 'logging-interceptor')
                        okhttp3logging.appendNode('version', '4.9.0')
                        okhttp3logging.appendNode('scope', 'compile')

                        // Square okhttp3
                        def squareOkhttp3 = dependenciesNode.appendNode('dependency')
                        squareOkhttp3.appendNode('groupId', 'com.squareup.okhttp3')
                        squareOkhttp3.appendNode('artifactId', 'okhttp')
                        squareOkhttp3.appendNode('version', '4.9.2')
                        squareOkhttp3.appendNode('scope', 'compile')

                        // Retrofit
                        def retrofitDep = dependenciesNode.appendNode('dependency')
                        retrofitDep.appendNode('groupId', 'com.squareup.retrofit2')
                        retrofitDep.appendNode('artifactId', 'retrofit')
                        retrofitDep.appendNode('version', '2.9.0')
                        retrofitDep.appendNode('scope', 'compile')

                        // Retrofit convert gson
                        def retrofitConvertGson = dependenciesNode.appendNode('dependency')
                        retrofitConvertGson.appendNode('groupId', 'com.squareup.retrofit2')
                        retrofitConvertGson.appendNode('artifactId', 'converter-gson')
                        retrofitConvertGson.appendNode('version', '2.9.0')
                        retrofitConvertGson.appendNode('scope', 'compile')

                        // Razorpay
                        def razorpay = dependenciesNode.appendNode('dependency')
                        razorpay.appendNode('groupId', 'com.razorpay')
                        razorpay.appendNode('artifactId', 'checkout')
                        razorpay.appendNode('version', '1.6.41')
                        razorpay.appendNode('scope', 'compile')

                        // easebuzz
                        def easebuzz = dependenciesNode.appendNode('dependency')
                        easebuzz.appendNode('groupId', 'in.easebuzz')
                        easebuzz.appendNode('artifactId', 'android-v1')
                        easebuzz.appendNode('version', '1.0.0')
                        easebuzz.appendNode('scope', 'compile')

                        // cashfree
                        def cashfree = dependenciesNode.appendNode('dependency')
                        cashfree.appendNode('groupId', 'com.cashfree.pg')
                        cashfree.appendNode('artifactId', 'api')
                        cashfree.appendNode('version', '2.1.27')
                        cashfree.appendNode('scope', 'compile')

                        // Add other dependencies similarly if needed
                    }
                }
            }
        }

        repositories {
            // JitPack will use this section, even if it's empty
        }
    }
}